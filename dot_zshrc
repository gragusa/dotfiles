# Enable persistent history
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=5000
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt incappendhistory
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Configure the push directory stack (most people don't need this)
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_SILENT

# Emacs keybindings
# bindkey -e
# Use the up and down keys to navigate the history
bindkey "\e[A" history-beginning-search-backward
bindkey "\e[B" history-beginning-search-forward

# Move to directories without cd
setopt autocd

# Initialize completion
autoload -U compinit; compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# The most important aliases ever (the only thing I borrowed from OMZ)
alias l='ls -lah'
alias la='ls -lAh'
alias ll='ls -lh'
alias ls='ls -G'
alias lsa='ls -lah'



export EDITOR="code --wait"

export ZSH="$HOME/.zsh"
source $ZSH/plugins/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh
source $ZSH/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh


# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)

# Preview file content using bat (https://github.com/sharkdp/bat)
export FZF_CTRL_T_OPTS='
  --walker-skip .git,node_modules,target,Library,Applications,Music,.julia,.vscode,Public
  --preview "bat --theme=TwoDark --style=numbers --color=always --line-range :500 {}"
  '

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PATH="$HOME/.juliaup/bin:$PATH"
export PATH="$HOME/bin:$PATH"

export TEXMFHOME=~/.texmf


## Set up pyenv
eval "$(pyenv init --path)"

# Set up zoxide to move between folders efficiently
eval "$(zoxide init zsh)"

# Set up the Starship prompt
eval "$(starship init zsh)"





# # Path to your oh-my-zsh installation.
# export ZSH="$HOME/.oh-my-zsh"

# # Which plugins would you like to load?
# # Standard plugins can be found in $ZSH/plugins/
# # Custom plugins may be added to $ZSH_CUSTOM/plugins/
# # Example format: plugins=(rails git textmate ruby lighthouse)
# # Add wisely, as too many plugins slow down shell startup.



# plugins=(
#   git
#   fzf
#   vscode
#   zsh-autosuggestions
#   zsh-syntax-highlighting
#   fast-syntax-highlighting
#   zsh-autocomplete
#  )

# source $ZSH/oh-my-zsh.sh
# ZSH_THEME = "powerlevel10k/powerlevel10k"
# # auto suggest
# # ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#663399,standout"

# bindkey "^[[H" beginning-of-line
# bindkey "^[[F" end-of-line

# bindkey '^I' menu-complete
# bindkey "$terminfo[kcbt]" reverse-menu-complete
# bindkey -M menuselect              '^I'         menu-complete
# bindkey -M menuselect "$terminfo[kcbt]" reverse-menu-complete
# bindkey -M menuselect '^M' .accept-line

# # User configuration


# #History setup
# HISTFILE=$HOME/.zsh_history

# export SAVEHIST=500000

# setopt hist_ignore_all_dups # remove older duplicate entries from history
# setopt hist_reduce_blanks # remove superfluous blanks from history items
# setopt inc_append_history # save history entries as soon as they are entered
# setopt share_history # share history between different instances of the shell
# setopt auto_cd # cd by typing directory name if it's not a command
# #setopt nocorrect # no correction autocorrect commands
# #setopt auto_list # automatically list choices on ambiguous completion
# #setopt auto_menu # automatically use menu completion
# setopt always_to_end # move cursor to end if word had one match

# # zstyle ':completion:*' menu select # select completions with arrow keys
# # zstyle ':completion:*' group-name '' # group results by category
# # zstyle ':completion:::::' completer _expand _complete _ignored _approximate #enable approximate matches for completion

# # all Tab widgets
# #zstyle ':autocomplete:*complete*:*' insert-unambiguous yes
# # all history widgets
# #zstyle ':autocomplete:*history*:*' insert-unambiguous yes
# # ^S
# #zstyle ':autocomplete:menu-search:*' insert-unambiguous yes

# # disable sort when completing `git checkout`
# zstyle ':completion:*:git-checkout:*' sort false
# # set descriptions format to enable group support
# # NOTE: don't use escape sequences (like '%F{red}%d%f') here, fzf-tab will ignore them
# zstyle ':completion:*:descriptions' format '[%d]'
# # set list-colors to enable filename colorizing
# zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# # force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
# zstyle ':completion:*' menu no
# # preview directory's content with eza when completing cd
# zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
# # custom fzf flags
# # NOTE: fzf-tab does not follow FZF_DEFAULT_OPTS by default
# zstyle ':fzf-tab:*' fzf-flags --color=fg:1,fg+:2 --bind=tab:accept
# # To make fzf-tab follow FZF_DEFAULT_OPTS.
# # NOTE: This may lead to unexpected behavior since some flags break this plugin. See Aloxaf/fzf-tab#455.
# zstyle ':fzf-tab:*' use-fzf-default-opts yes
# # switch group using `<` and `>`
# zstyle ':fzf-tab:*' switch-group '<' '>'




# export EDITOR="code --wait"



# export PYENV_ROOT="$HOME/.pyenv"
# export PATH="$PYENV_ROOT/bin:$PATH"
# export PATH="$HOME/.juliaup/bin:$PATH"
# export PATH="$HOME/bin:$PATH"

# export TEXMFHOME=~/.texmf

# eval "$(pyenv init --path)"
# eval "$(pyenv init -)"
# eval "$(zoxide init zsh)"
# #eval "$(starship init zsh)"
# #source $ZSH_CUSTOM/plugins/fzf-tab/fzf-tab.zsh


